package {	import flash.display.MovieClip;	import flash.events.Event;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.net.*;		import com.indiemaps.charting.TimeSeriesGraph;	public class ApprovalDemo extends MovieClip {				var dateArray:Array;		var approval:Array;		var disapproval:Array;		var unsure:Array;		var n:Array;		var myGraph:TimeSeriesGraph;				function ApprovalDemo() {			loadData();					}				internal function loadData() {			var dataLoader:URLLoader = new URLLoader();			dataLoader.dataFormat = URLLoaderDataFormat.TEXT;			dataLoader.load( new URLRequest("approvalGallup.csv"));			dataLoader.addEventListener(Event.COMPLETE, processData);		}				internal function processData(e:Event) {			var lines = e.target.data.split("\r");			dateArray = new Array();			approval = new Array();			disapproval = new Array();			unsure = new Array();			n = new Array();						for (var lineNum in lines) {				var currentLine = lines[lineNum].split(",");				dateArray.push(new Date(currentLine[0]));				approval.push(currentLine[1]);				disapproval.push(currentLine[2]);				unsure.push(currentLine[3]);				n.push(currentLine[4]);			}			instantiateGraph();		}				internal function instantiateGraph() {			myGraph = new TimeSeriesGraph(this);			myGraph.x = 5;			myGraph.y = 5;			//set the size of the time series graph			myGraph.setGraphSize(stage.stageWidth - myGraph.x*2, stage.stageHeight-myGraph.y*2);			//send it some arrays -- the first array is the values, the second is an array of date objects ( so...the value at valueArray[15] should have taken place/been measured on the date at dateArray[15] )			myGraph.drawGraphs(approval, dateArray);			myGraph.applySecondGraph(unsure, dateArray);			myGraph.changeLabels("Approval Rating", "Unsure", "%", "%");			addChild(myGraph);				}	}		}